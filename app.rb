# Программы подсчёта количества одинаковых слов в текстовом файле
#

def add_to_hach word          # Передаём в метод слово

  if !word.empty?             # Если слово не пустота то .... иначе выходим из метода

    word.downcase!            # Преобразуем слово к маленьким буквам

    cnt = @hh[word]           # Считываем из хеша значение, соеуе ключу word  

    cnt = cnt.to_i            # Преобразуем в целому ( если cnt="" то получается 0 )

    cnt += 1                  # Увеличиваем cnt на 1
    
    @hh[word] = cnt           # Пишем в хеш новое значение
    
  end
  
end


# ---------------------------------------------- B E G I N ---------------------------------------------
f = File.open 'text.txt', 'r'

@hh = {}


# Считываем каждую строку пока не кончится файл
f.each_line do |line|
  # Разбиваем строку на слова. В качестве разделителя принимаем несколько элементов заключённых в / /
  #                 /s - это waitspace - белое пространство (пробел, табуляция, отступ, ...)
  #                 |  - это символ логическог или (OR)
  #                 /n - это символ конца строки
  #                 Всё это выражение в целом - есть регулярное выражение для разделения строки 
  arr = line.split(/\s|\n|\.|\,|\(|\)|\;|\"|\»|\-|\«/)
                    # Добавлены: (точка, запятая, скобки круглые и ;) - считаем их разделителями

                    # Массив arr для каждой строки формируется вновь, старые данные заменяются данными из текущей строки, т.е. данные предыдущей строки уже учтены в хеше и они затираются данными из текущей строки.

  # Массив arr разбираем по элементам. Каждый элемент - слово
  arr.each { |word| add_to_hach(word)}
                    # Отправляем каждое слово для учёта в хеше @hh
                    # 
end # Переходим к новой строке для разбора по словам и учёта в хеше.

f.close

hhh = @hh.sort_by { |key, value| value }.reverse

#  sort_by(&:last).reverse! 

num=0
hhh.each do |key, value|
  print " )\n====> #{value} <=== ( " if num != value
  num = value 
  print "#{key}\t" if value != 1
end

# @hh.each do |key, value|
#   puts "#{key} => #{value}" if value > 1
# end
